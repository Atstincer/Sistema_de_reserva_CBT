/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import clases.Conexion;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.*;

/**
 *
 * @author ALEX
 */
public class Usuarios_update extends javax.swing.JFrame {

    int Id_usuario;
    String usuario_original;

    /**
     * Creates new form Clientes_agregar
     */
    public Usuarios_update() {
        initComponents();
        setSize(345, 400);
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Actualizar usuarios - " + Login.user);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        Id_usuario = Usuarios_tabla.Id_usuario;

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select Nombre, Apellido, Usuario, Contrasena, Status, Categoria "
                    + "from usuarios where Id_usuario = '" + Id_usuario + "'");

            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                jTextField_nombre.setText(rs.getString("Nombre"));
                jTextField_apellido.setText(rs.getString("Apellido"));
                jTextField_usuario.setText(rs.getString("Usuario"));
                jPasswordField.setText(rs.getString("Contrasena"));
                jComboBox_status.setSelectedItem(rs.getString("Status"));
                jComboBox_categoria.setSelectedItem(rs.getString("Categoria"));
            }

            cn.close();

        } catch (SQLException e) {
            System.err.println("Error accediendo a BD en constructor: " + e);
            JOptionPane.showMessageDialog(null, "!!Error accediendo a la BD. Comuníquese con el administrador.");
        }

        usuario_original = jTextField_usuario.getText().toString();

    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/Icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_nombre = new javax.swing.JTextField();
        jTextField_apellido = new javax.swing.JTextField();
        jButton_actualizar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextField_usuario = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jComboBox_status = new javax.swing.JComboBox<>();
        jComboBox_categoria = new javax.swing.JComboBox<>();
        jLabel_footer = new javax.swing.JLabel();
        jButton_eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("SOBRE EL USUARIO");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 29, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nombre");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 75, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Apellido");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 75, -1, -1));

        jTextField_nombre.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField_nombre.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_nombre.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 90, 100, 25));

        jTextField_apellido.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_apellido.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField_apellido.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_apellido.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 100, 25));

        jButton_actualizar.setBackground(new java.awt.Color(153, 153, 153));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jButton_actualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_actualizarKeyPressed(evt);
            }
        });
        jPanel1.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 90, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Usuario");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 135, -1, -1));

        jTextField_usuario.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_usuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField_usuario.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_usuario.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 150, 100, 25));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Contraseña");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 195, -1, -1));

        jPasswordField.setBackground(new java.awt.Color(204, 204, 204));
        jPasswordField.setForeground(new java.awt.Color(0, 0, 115));
        jPasswordField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordFieldKeyPressed(evt);
            }
        });
        jPanel1.add(jPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 210, 100, 25));

        jComboBox_status.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "activo", "inactivo" }));
        jPanel1.add(jComboBox_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 100, 25));

        jComboBox_categoria.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "vendedor", "Admin" }));
        jComboBox_categoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_categoriaKeyPressed(evt);
            }
        });
        jPanel1.add(jComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 100, 25));

        jLabel_footer.setText("© Realizado por atstincer");
        jPanel1.add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 150, 20));

        jButton_eliminar.setBackground(new java.awt.Color(153, 153, 153));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jButton_eliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_eliminarKeyPressed(evt);
            }
        });
        jPanel1.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 290, 80, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed
        // TODO add your handling code here:
        Actualizar();
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        // TODO add your handling code here:
       Eliminar();
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jButton_actualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_actualizarKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode()==KeyEvent.VK_ENTER){
            Actualizar();
        }
    }//GEN-LAST:event_jButton_actualizarKeyPressed

    private void jPasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode()==KeyEvent.VK_ENTER){
            Actualizar();
        }
    }//GEN-LAST:event_jPasswordFieldKeyPressed

    private void jComboBox_categoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_categoriaKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode()==KeyEvent.VK_ENTER){
            Actualizar();
        }
    }//GEN-LAST:event_jComboBox_categoriaKeyPressed

    private void jButton_eliminarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_eliminarKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode()==KeyEvent.VK_ENTER){
            Eliminar();
        }
    }//GEN-LAST:event_jButton_eliminarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios_update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios_update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JComboBox<String> jComboBox_categoria;
    private javax.swing.JComboBox<String> jComboBox_status;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_footer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextField_apellido;
    private javax.swing.JTextField jTextField_nombre;
    private javax.swing.JTextField jTextField_usuario;
    // End of variables declaration//GEN-END:variables

    public void Limpiar() {
        jTextField_nombre.setText("");
        jTextField_apellido.setText("");
        jTextField_usuario.setText("");
        jPasswordField.setText("");
    }
    
    public void Actualizar(){
        String nombre = jTextField_nombre.getText().trim();
        String apellido = jTextField_apellido.getText().trim();
        String usuario = jTextField_usuario.getText().trim();
        String contrasena = jPasswordField.getText().trim();
        String status = jComboBox_status.getSelectedItem().toString();
        String categoria = jComboBox_categoria.getSelectedItem().toString();
        int validar = 0;

        if (!nombre.equals("") && !apellido.equals("") && !usuario.equals("") && !contrasena.equals("")) {

            if (!usuario_original.equals(usuario)) {
                //comprobando que no existe usuario igual ya registrado
                try {
                    Connection cn1 = Conexion.conectar();
                    PreparedStatement pst1 = cn1.prepareStatement("select * from usuarios where Usuario = '" + usuario + "'");

                    ResultSet rs1 = pst1.executeQuery();

                    if (rs1.next()) {
                        JOptionPane.showMessageDialog(null, "Lo sentimos, el nombre de 'usuario' existe ya. Debe seleccionar "
                                + "uno diferente para proseguir.");
                        validar = 1;
                    }
                } catch (SQLException e) {
                    System.err.println("Error consultando BD comparando campo usuario: " + e);
                    JOptionPane.showMessageDialog(null, "!!!Error consultando la BD. Contacte al administrador.");
                }
            }

            if (validar == 0) {
                try {
                    Connection cn2 = Conexion.conectar();
                    PreparedStatement pst2 = cn2.prepareStatement("update usuarios set Nombre=?, Apellido=?, Usuario=?, "
                            + "Contrasena=?, Status=?, Categoria=? where Id_usuario = '" + Id_usuario + "'");

                    pst2.setString(1, nombre);
                    pst2.setString(2, apellido);
                    pst2.setString(3, usuario);
                    pst2.setString(4, contrasena);
                    pst2.setString(5, status);
                    pst2.setString(6, categoria);

                    pst2.executeUpdate();
                    cn2.close();

                    Limpiar();

                    jTextField_nombre.setBackground(Color.green);
                    jTextField_apellido.setBackground(Color.green);
                    jTextField_usuario.setBackground(Color.green);
                    jPasswordField.setBackground(Color.green);

                    JOptionPane.showMessageDialog(null, "Los datos se han actualizado correctamente");
                    cn2.close();
                    this.dispose();

                } catch (SQLException e) {
                    System.err.println("Error al actualizar usuario: " + e);
                    JOptionPane.showMessageDialog(null, "!!Error al actualizar info del usuario...contacte al administrador.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes llenar todos los campos");
        }
    }
    
    public void Eliminar(){
         int confirmacion = JOptionPane.showConfirmDialog(null, "Seguro que desea eliminar este usuario?");

        if (confirmacion == JOptionPane.OK_OPTION) {

            try {
                Connection cn3 = Conexion.conectar();
                PreparedStatement pst3 = cn3.prepareStatement("delete * from usuarios where Id_usuario = '" + Id_usuario + "'");

                pst3.executeUpdate();

                cn3.close();
                this.dispose();

            } catch (SQLException e) {
                System.err.println("Error eliminando registro: " + e);
                JOptionPane.showMessageDialog(null, "Error accediendo a la BD. Contacte al administrador.");
            }

        }
    }
}

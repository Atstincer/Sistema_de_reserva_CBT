/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.Conexion;
import clases.Util;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALEX
 */
public class Servicios_reservar extends javax.swing.JFrame {

//    public static String telefono, cell, mail;
//    private String reservadoPor, desde, hasta, query, nombre, apellido, te_alojamiento, te_traslado,
//            id_cliente_vincular = "";
    private String[] servicio = new String[28];
    private DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form Servicios_agregar_modificar
     */
    public Servicios_reservar() {
        initComponents();
        setSize(740, 625);
        setResizable(false);
        setTitle("Agregar servicio - " + Login.user);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        jDialog_clientes_seleccionar.setSize(710, 500);
        jDialog_clientes_seleccionar.setResizable(false);
        jDialog_clientes_seleccionar.setTitle("Seleccionar cliente - " + Login.user);
        jDialog_clientes_seleccionar.setLocationRelativeTo(null);
        jDialog_clientes_seleccionar.setModal(true);

        jTable_clientes = new JTable(model);
        jScrollPane1.setViewportView(jTable_clientes);

        model.addColumn(" ");
        model.addColumn("Nombre");
        model.addColumn("Apellido");
        model.addColumn("Nacionalidad");
        model.addColumn("Telefono");
        model.addColumn("Mobil");
        model.addColumn("E-mail");
        model.addColumn("Observaciones");

        Color colorJDateFondo = new Color(204, 204, 204);
        ((JTextField) jDateChooser_fechaIda.getDateEditor().getUiComponent()).setBackground(colorJDateFondo);
        ((JTextField) jDateChooser_fechaRegreso.getDateEditor().getUiComponent()).setBackground(colorJDateFondo);

        jTable_clientes.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_clientes.rowAtPoint(e.getPoint());
                String Id_cliente_vincular = "";
                
                if (fila_point > -1) {
                    Id_cliente_vincular = model.getValueAt(fila_point, 0).toString();

                    int confirmacion = JOptionPane.showConfirmDialog(null, "Seguro que desea vincular el cliente \n"
                            + "seleccionado al servicio?");

                    if (confirmacion == JOptionPane.OK_OPTION) {
                        servicio[21] = model.getValueAt(fila_point,1).toString();
                        servicio[22] = model.getValueAt(fila_point,2).toString();
//                        System.out.println(servicio[21] + " " + servicio[22]);
                        Reservar_servicio(Id_cliente_vincular);
                        jDialog_clientes_seleccionar.dispose();
                    }
                }
            }

        });
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/Icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog_clientes_seleccionar = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jTextField_buscar = new javax.swing.JTextField();
        jComboBox_campos = new javax.swing.JComboBox<>();
        jButton_filtrar = new javax.swing.JButton();
        jLabel_footer1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_clientes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_adultos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_descripcionServ = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField_hotel = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField_TEaloj = new javax.swing.JTextField();
        jComboBox_destino = new javax.swing.JComboBox<>();
        jComboBox_trf = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_TEtrf = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox_proveedorTRF = new javax.swing.JComboBox<>();
        jButton_ReservarServ = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField_nombreCliente = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField_nacionalidadCliente = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField_telefonoCliente = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField_celularCliente = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField_EmailCliente = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1_observacionesCliente = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        jDateChooser_fechaIda = new com.toedter.calendar.JDateChooser();
        jDateChooser_fechaRegreso = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1_observacionesServicio = new javax.swing.JTextArea();
        jLabel_footer = new javax.swing.JLabel();
        jTextField_confirmacion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField_menor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField_infante = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField_aloj_efectivo = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jTextField_aloj_credito = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1_tarjetas_credito = new javax.swing.JTextArea();
        jTextField_trf_efectivo = new javax.swing.JTextField();
        jTextField_trf_credito = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextField_apellidoCliente = new javax.swing.JTextField();

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setText("Seleccione el cliente que desea vincular al servicio");
        jPanel2.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 45, -1, -1));

        jTextField_buscar.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_buscar.setForeground(new java.awt.Color(0, 0, 155));
        jTextField_buscar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_buscarActionPerformed(evt);
            }
        });
        jTextField_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_buscarKeyPressed(evt);
            }
        });
        jPanel2.add(jTextField_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 150, 30));

        jComboBox_campos.setBackground(new java.awt.Color(153, 153, 153));
        jComboBox_campos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Nombre", "Telefono_fijo", "Telefono_cell", "Email" }));
        jPanel2.add(jComboBox_campos, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, 90, 30));

        jButton_filtrar.setBackground(new java.awt.Color(153, 153, 153));
        jButton_filtrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_filtrar.setText("Filtrar");
        jButton_filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_filtrarActionPerformed(evt);
            }
        });
        jButton_filtrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_filtrarKeyPressed(evt);
            }
        });
        jPanel2.add(jButton_filtrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 415, 80, 30));

        jLabel_footer1.setText("© Realizado por atstincer");
        jPanel2.add(jLabel_footer1, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 450, 150, 20));

        jScrollPane1.setBackground(new java.awt.Color(153, 153, 153));

        jTable_clientes.setBackground(new java.awt.Color(153, 153, 153));
        jTable_clientes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable_clientes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable_clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_clientes.setCellSelectionEnabled(true);
        jTable_clientes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTable_clientes);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, 690, 300));

        javax.swing.GroupLayout jDialog_clientes_seleccionarLayout = new javax.swing.GroupLayout(jDialog_clientes_seleccionar.getContentPane());
        jDialog_clientes_seleccionar.getContentPane().setLayout(jDialog_clientes_seleccionarLayout);
        jDialog_clientes_seleccionarLayout.setHorizontalGroup(
            jDialog_clientes_seleccionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_clientes_seleccionarLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(369, 369, 369))
        );
        jDialog_clientes_seleccionarLayout.setVerticalGroup(
            jDialog_clientes_seleccionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog_clientes_seleccionarLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(421, 421, 421))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("INFORMACION GENERAL");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 30, -1, -1));

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Adul");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, -1, -1));

        jTextField_adultos.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_adultos.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_adultos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_adultos, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 105, 30, 30));

        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Descripción");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jTextField_descripcionServ.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_descripcionServ.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_descripcionServ.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_descripcionServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 105, 150, 30));

        jLabel4.setText("Hotel");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 90, -1, -1));

        jTextField_hotel.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_hotel.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_hotel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_hotel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 105, 150, 30));

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("TE alojamiento");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 90, -1, -1));

        jTextField_TEaloj.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_TEaloj.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_TEaloj.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_TEaloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 105, 100, 30));

        jComboBox_destino.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_destino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_destino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Otros", "Varadero", "CSM", "CayoCoco", "Cienfuegos", "Trinidad" }));
        jPanel1.add(jComboBox_destino, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, 100, 30));

        jComboBox_trf.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_trf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_trf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No", "Solo_ida", "Solo_regreso", "Solo_traslado" }));
        jPanel1.add(jComboBox_trf, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 100, 30));

        jLabel6.setText("Destino");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 155, -1, -1));

        jLabel7.setText("Traslado");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 155, -1, -1));

        jLabel8.setText("TE traslado");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 155, -1, -1));

        jTextField_TEtrf.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_TEtrf.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_TEtrf.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_TEtrf, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 100, 30));

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("Desde");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 155, -1, -1));

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Hasta");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 155, -1, -1));

        jLabel11.setText("Proveedor");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 155, -1, -1));

        jComboBox_proveedorTRF.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_proveedorTRF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Transtur", "Transgvt", "Otro" }));
        jComboBox_proveedorTRF.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jComboBox_proveedorTRF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, 90, 30));

        jButton_ReservarServ.setBackground(new java.awt.Color(153, 153, 153));
        jButton_ReservarServ.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_ReservarServ.setText("Reservar");
        jButton_ReservarServ.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_ReservarServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ReservarServActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_ReservarServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 535, 100, 30));

        jLabel13.setText("-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 700, -1));

        jLabel14.setText("Observaciones");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("CLIENTE RELACIONADO");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 360, -1, -1));

        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("Nombre");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));

        jTextField_nombreCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_nombreCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_nombreCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_nombreCliente.setFocusTraversalPolicyProvider(true);
        jPanel1.add(jTextField_nombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 405, 100, 30));

        jLabel18.setText("Apellido");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 390, -1, -1));

        jLabel19.setText("Nacionalidad");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 455, -1, -1));

        jTextField_nacionalidadCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_nacionalidadCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_nacionalidadCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_nacionalidadCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 80, 30));

        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("- campos obligatorios");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));

        jTextField_telefonoCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_telefonoCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_telefonoCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_telefonoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 405, 80, 30));

        jLabel21.setText("Teléfono");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, -1, -1));

        jTextField_celularCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_celularCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_celularCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_celularCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 405, 80, 30));

        jLabel22.setText("Celular");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, -1, -1));

        jTextField_EmailCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_EmailCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_EmailCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_EmailCliente.setFocusTraversalPolicyProvider(true);
        jPanel1.add(jTextField_EmailCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 210, 30));

        jLabel23.setText("E-mail");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 455, -1, -1));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1_observacionesCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1_observacionesCliente.setColumns(1);
        jTextArea1_observacionesCliente.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1_observacionesCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextArea1_observacionesCliente.setRows(5);
        jScrollPane2.setViewportView(jTextArea1_observacionesCliente);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 405, 180, 100));

        jLabel24.setText("Observaciones");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, -1, -1));

        jDateChooser_fechaIda.setBackground(new java.awt.Color(153, 153, 153));
        jDateChooser_fechaIda.setDateFormatString("dd/MM/yyyy");
        jPanel1.add(jDateChooser_fechaIda, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 130, 30));

        jDateChooser_fechaRegreso.setBackground(new java.awt.Color(153, 153, 153));
        jDateChooser_fechaRegreso.setForeground(new java.awt.Color(0, 0, 115));
        jDateChooser_fechaRegreso.setDateFormatString("dd/MM/yyyy");
        jPanel1.add(jDateChooser_fechaRegreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 130, 30));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1_observacionesServicio.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1_observacionesServicio.setColumns(1);
        jTextArea1_observacionesServicio.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1_observacionesServicio.setForeground(new java.awt.Color(0, 0, 115));
        jTextArea1_observacionesServicio.setRows(5);
        jScrollPane3.setViewportView(jTextArea1_observacionesServicio);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 235, 180, 100));

        jLabel_footer.setText("© Realizado por atstincer");
        jPanel1.add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 575, 150, 20));

        jTextField_confirmacion.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_confirmacion.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_confirmacion.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_confirmacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 105, 80, 30));

        jLabel16.setText("Confirmación");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, -1, -1));

        jTextField_menor.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_menor.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_menor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_menor, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 105, 30, 30));

        jLabel12.setText("Niños");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, -1, -1));

        jTextField_infante.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_infante.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_infante.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_infante, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 105, 30, 30));

        jLabel25.setText("Infante");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, -1, -1));

        jLabel26.setText("Alojamiento");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        jTextField_aloj_efectivo.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_aloj_efectivo.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_aloj_efectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_aloj_efectivo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_aloj_efectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_aloj_efectivoActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField_aloj_efectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 245, 80, 25));

        jLabel27.setText("Efectivo");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, -1, -1));

        jTextField_aloj_credito.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_aloj_credito.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_aloj_credito.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_aloj_credito.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_aloj_credito, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 245, 80, 25));

        jLabel28.setText("Crédito");
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, -1, -1));

        jLabel29.setText("Tarjetas de crédito");
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, -1, -1));

        jScrollPane4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1_tarjetas_credito.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1_tarjetas_credito.setColumns(1);
        jTextArea1_tarjetas_credito.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1_tarjetas_credito.setForeground(new java.awt.Color(0, 0, 115));
        jTextArea1_tarjetas_credito.setRows(5);
        jScrollPane4.setViewportView(jTextArea1_tarjetas_credito);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 245, 150, 60));

        jTextField_trf_efectivo.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_trf_efectivo.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_trf_efectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_trf_efectivo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_trf_efectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_trf_efectivoActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField_trf_efectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 80, 25));

        jTextField_trf_credito.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_trf_credito.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_trf_credito.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_trf_credito.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_trf_credito, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 80, 25));

        jLabel30.setText("Traslado");
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 285, -1, -1));

        jTextField_apellidoCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_apellidoCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_apellidoCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_apellidoCliente.setFocusTraversalPolicyProvider(true);
        jPanel1.add(jTextField_apellidoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 405, 100, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ReservarServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ReservarServActionPerformed
        // TODO add your handling code here:
        Vaciar_array(servicio);
        Llenar_array();

        //validarServ = 0 los campos validados
        //validarServ = 1 faltan campos por llenar
        //vincular = 1 se ha encontrado coincidencia con registro en tabla clientes
        //vincular = 0 no se encontró coincidencias
        if (Validar_campos()) {
            if (!servicio[23].equals("") || !servicio[24].equals("") || !servicio[25].equals("")) {
                //telefono-cell-mail
                //quiere decir que ingresaron info de cliente para vincular al servicio
                if (Coinciden_clientes()) {
                    Util.VaciarTabla(model);
                    try {
                        Connection cn = Conexion.conectar();
                        PreparedStatement pst = cn.prepareStatement(QueryCoincidenciaCliente());

                        ResultSet rs = pst.executeQuery();

                        while (rs.next()) {
                            //existe coincidencia...instancia clase para seleccionar cliente e/ los registrados
                            Object[] fila = new Object[8];
                            for (int i = 0; i < fila.length; i++) {
                                fila[i] = rs.getString(i + 1);
                            }
                            model.addRow(fila);
                        }
                        cn.close();
                        JOptionPane.showMessageDialog(null,"Los datos ingresados coinciden con uno o mas clientes \n"
                                + "registrados ya con anterioridad. Seleccione de la tabla si desea vincular alguno \n"
                                + "de estos clientes al servicio actual.");
                        jDialog_clientes_seleccionar.setVisible(true);
                    } catch (SQLException e) {
                        System.err.println("Error chequeando coincidencia con clientes registrados: " + e);
                        JOptionPane.showMessageDialog(null, "!!Error chequeando coincidencia con clientes "
                                + "registrados. Contacte al administrador.");
                    }
                } else {
                    try {//no existe coincidencia---registrando cliente nuevo
                        Connection cn = Conexion.conectar();
                        PreparedStatement pst = cn.prepareStatement("insert into Clientes values (?,?,?,?,?,?,?,?)");

                        pst.setInt(1, 0);
                        pst.setString(2, servicio[21]);//nombre
                        pst.setString(3, servicio[22]);//apellido
                        pst.setString(4, servicio[26]);//nacionalidad
                        pst.setString(5, servicio[23]);//teléfono
                        pst.setString(6, servicio[24]);//cell
                        pst.setString(7, servicio[25]);//mail
                        pst.setString(8, servicio[27]);//observaciones cliente

                        pst.executeUpdate();
                        cn.close();
                    } catch (SQLException e) {
                        System.err.println("Error en conexion al insertar valores en tabla Clientes. " + e);
                        JOptionPane.showMessageDialog(null, "Error en conexion al insertar valores en tabla Clientes. Favor "
                                + "contacte al administrador.");
                    }

                    String id_cliente_vincular = "";

                    try {//recuperando Id de cliente registrado
                        Connection cn = Conexion.conectar();
                        PreparedStatement pst = cn.prepareStatement(QueryRecuperarId());

                        ResultSet rs = pst.executeQuery();

                        if (rs.next()) {
                            id_cliente_vincular = rs.getString(1);
                        }
                        cn.close();
                    } catch (SQLException e) {
                        System.err.println("Error al conectar para recuperar Id del cliente registrado." + e);
                        JOptionPane.showMessageDialog(null, "Error al conectar con la BD. Favor contacte con el administrador.");
                    }
                    
                    if(!id_cliente_vincular.equals("")){
                        Reservar_servicio(id_cliente_vincular);
                    }else{
                        JOptionPane.showMessageDialog(null, "!!Error tratando de recuperar 'Id' del nuevo cliente.\\n"
                                + " Favor contacte al administrador.");
                    }
                }
            } else {
                Reservar_servicio("");
            }
        }
    }//GEN-LAST:event_jButton_ReservarServActionPerformed

    private void jTextField_aloj_efectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_aloj_efectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_aloj_efectivoActionPerformed

    private void jTextField_trf_efectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_trf_efectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_trf_efectivoActionPerformed

    private void jTextField_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_buscarActionPerformed

    private void jTextField_buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_buscarKeyPressed
        // TODO add your handling code here:
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            Filtrar();
        }
    }//GEN-LAST:event_jTextField_buscarKeyPressed

    private void jButton_filtrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_filtrarActionPerformed
        // TODO add your handling code here:
        Filtrar();
    }//GEN-LAST:event_jButton_filtrarActionPerformed

    private void jButton_filtrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_filtrarKeyPressed
        // TODO add your handling code here:
        if (evt.getExtendedKeyCode() == KeyEvent.VK_ENTER) {
            Filtrar();
        }
    }//GEN-LAST:event_jButton_filtrarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servicios_reservar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servicios_reservar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servicios_reservar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servicios_reservar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servicios_reservar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ReservarServ;
    private javax.swing.JButton jButton_filtrar;
    private javax.swing.JComboBox<String> jComboBox_campos;
    private javax.swing.JComboBox<String> jComboBox_destino;
    private javax.swing.JComboBox<String> jComboBox_proveedorTRF;
    private javax.swing.JComboBox<String> jComboBox_trf;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaIda;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaRegreso;
    private javax.swing.JDialog jDialog_clientes_seleccionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_footer;
    private javax.swing.JLabel jLabel_footer1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable_clientes;
    private javax.swing.JTextArea jTextArea1_observacionesCliente;
    private javax.swing.JTextArea jTextArea1_observacionesServicio;
    private javax.swing.JTextArea jTextArea1_tarjetas_credito;
    private javax.swing.JTextField jTextField_EmailCliente;
    private javax.swing.JTextField jTextField_TEaloj;
    private javax.swing.JTextField jTextField_TEtrf;
    private javax.swing.JTextField jTextField_adultos;
    private javax.swing.JTextField jTextField_aloj_credito;
    private javax.swing.JTextField jTextField_aloj_efectivo;
    private javax.swing.JTextField jTextField_apellidoCliente;
    private javax.swing.JTextField jTextField_buscar;
    private javax.swing.JTextField jTextField_celularCliente;
    private javax.swing.JTextField jTextField_confirmacion;
    private javax.swing.JTextField jTextField_descripcionServ;
    private javax.swing.JTextField jTextField_hotel;
    private javax.swing.JTextField jTextField_infante;
    private javax.swing.JTextField jTextField_menor;
    private javax.swing.JTextField jTextField_nacionalidadCliente;
    private javax.swing.JTextField jTextField_nombreCliente;
    private javax.swing.JTextField jTextField_telefonoCliente;
    private javax.swing.JTextField jTextField_trf_credito;
    private javax.swing.JTextField jTextField_trf_efectivo;
    // End of variables declaration//GEN-END:variables

    //query para recuperar Id del cliente registrado
    public String QueryRecuperarId() {
        String query = "";
        if (!servicio[23].equals("") && servicio[24].equals("") && servicio[25].equals("")) {//buscar solo por telefono
            query = "select Id_cliente from Clientes where Nombre = '" + servicio[21] + "' and Telefono_fijo = '" + servicio[23] + "'";
        } else if (!servicio[23].equals("") && !servicio[24].equals("") && servicio[25].equals("")) {//buscar por telefono y cell
            query = "select Id_cliente from Clientes where Nombre = '" + servicio[21] + "' and Telefono_fijo = '" + servicio[23] + "' "
                    + "and  Telefono_cell = '" + servicio[24] + "'";
        } else if (!servicio[23].equals("") && servicio[24].equals("") && !servicio[25].equals("")) {//buscar por telefono y mail
            query = "select Id_cliente from Clientes where Nombre = '" + servicio[21] + "' and Telefono_fijo = '" + servicio[23] + "' "
                    + "and  E_mail = '" + servicio[25] + "'";
        } else if (!servicio[23].equals("") && !servicio[24].equals("") && !servicio[25].equals("")) {//buscar por los tres
            query = "select Id_cliente from Clientes where Nombre = '" + servicio[21] + "' and Telefono_fijo = '" + servicio[23] + "' "
                    + "and  Telefono_cell = '" + servicio[24] + "' and E_mail = '" + servicio[25] + "'";
        } else if (servicio[23].equals("") && !servicio[24].equals("") && servicio[25].equals("")) {//buscar por cell
            query = "select Id_cliente from Clientes where Nombre = '" + servicio[21] + "' and Telefono_cell = '" + servicio[24] + "'";
        } else if (servicio[23].equals("") && !servicio[24].equals("") && !servicio[25].equals("")) {//buscar por cell y mail
            query = "select Id_cliente from Clientes where Nombre = '" + servicio[21] + "' and Telefono_cell = '" + servicio[24] + "' "
                    + "and E_mail = '" + servicio[25] + "'";
        } else if (servicio[23].equals("") && servicio[24].equals("") && !servicio[25].equals("")) {//buscar por mail
            query = "select Id_cliente from Clientes where Nombre = '" + servicio[21] + "' and E_mail = '" + servicio[25] + "'";
        }
        return query;
    }

    //query para verificar si info coincide con algun cliente registrado anteriormente
    public String QueryCoincidenciaCliente() {
        String query = "";
        if (!servicio[23].equals("") && servicio[24].equals("") && servicio[25].equals("")) {//buscar solo por telefono
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, Telefono_cell, E_mail, "
                    + "Observaciones from Clientes where Telefono_fijo = '" + servicio[23] + "'";
        } else if (!servicio[23].equals("") && !servicio[24].equals("") && servicio[25].equals("")) {//buscar por telefono y cell
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, Telefono_cell, E_mail, "
                    + "Observaciones from Clientes where Telefono_fijo = '" + servicio[23] + "' or "
                    + "Telefono_cell = '" + servicio[24] + "'";
        } else if (!servicio[23].equals("") && servicio[24].equals("") && !servicio[25].equals("")) {//buscar por telefono y mail
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, Telefono_cell, E_mail, Observaciones "
                    + "from Clientes where Telefono_fijo = '" + servicio[23] + "' or  E_mail = '" + servicio[25] + "'";
        } else if (!servicio[23].equals("") && !servicio[24].equals("") && !servicio[25].equals("")) {//buscar por los telefono, cell y mail
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, Telefono_cell, E_mail, Observaciones "
                    + "from Clientes where Telefono_fijo = '" + servicio[23] + "' or  Telefono_cell = '" + servicio[24] + "'"
                    + " or E_mail = '" + servicio[25] + "'";
        } else if (servicio[23].equals("") && !servicio[24].equals("") && servicio[25].equals("")) {//buscar por cell
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, Telefono_cell, E_mail, Observaciones "
                    + "from Clientes where Telefono_cell = '" + servicio[24] + "'";
        } else if (servicio[23].equals("") && !servicio[24].equals("") && !servicio[25].equals("")) {//buscar por cell y mail
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, Telefono_cell, E_mail, Observaciones "
                    + "from Clientes where Telefono_cell = '" + servicio[24] + "' or E_mail = '" + servicio[25] + "'";
        } else if (servicio[23].equals("") && servicio[24].equals("") && !servicio[25].equals("")) {//buscar por mail
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, Telefono_cell, E_mail, Observaciones "
                    + "from Clientes where E_mail = '" + servicio[25] + "'";
        }
        return query;
    }

    //query para verificar si info coincide con algun ticket registrado anteriormente
    public String QueryVerificarCoincidenciaTE() {
        String query = "";
        if (!servicio[5].equals("") && servicio[7].equals("")) {//buscar por te_alojamiento
            query = "select Id_servicio from Servicios where TE_alojamiento = '" + servicio[5] + "'"
                    + " or TE_traslado = '" + servicio[5] + "'";
        } else if (!servicio[5].equals("") && !servicio[7].equals("")) {//buscar por te_alojamiento y te_traslado
            query = "select Id_servicio from Servicios where TE_alojamiento = '" + servicio[5] + "' "
                    + "or TE_alojamiento = '" + servicio[7] + "' or TE_traslado = '" + servicio[5] + "' "
                    + "or TE_traslado = '" + servicio[7] + "'";
        } else if (servicio[5].equals("") && !servicio[7].equals("")) {//buscar por te_traslado
            query = "select Id_servicio from Servicios where TE_traslado = '" + servicio[7] + "' or "
                    + "TE_alojamiento = '" + servicio[7] + "'";
        }
        return query;
    }

    //metodo para limpiar todos los campos
    public void Limpiar() {
        jTextField_descripcionServ.setText("");
        jTextField_hotel.setText("");
        jTextField_TEaloj.setText("");
        jTextField_TEtrf.setText("");
        jTextArea1_observacionesServicio.setText("");
        jTextField_nombreCliente.setText("");
        jTextField_apellidoCliente.setText("");
        jTextField_telefonoCliente.setText("");
        jTextField_celularCliente.setText("");
        jTextField_EmailCliente.setText("");
        jTextArea1_observacionesCliente.setText("");
        jTextField_nacionalidadCliente.setText("");
        jTextField_adultos.setText("");
        jDateChooser_fechaIda.setCalendar(null);
        jDateChooser_fechaRegreso.setCalendar(null);
        jTextField_confirmacion.setText("");
        jTextField_menor.setText("");
        jTextField_infante.setText("");
        jTextField_aloj_credito.setText("");
        jTextField_aloj_efectivo.setText("");
        jTextField_trf_credito.setText("");
        jTextField_trf_efectivo.setText("");
        jTextArea1_tarjetas_credito.setText("");
    }

    private void Vaciar_array(String[] list) {
        for (int i = 0; i < list.length; i++) {
            list[i] = "";
        }
    }

    private void Llenar_array() {
        servicio[0] = jTextField_descripcionServ.getText();
        servicio[1] = jTextField_hotel.getText();
        servicio[2] = jTextField_adultos.getText();
        servicio[3] = jTextField_menor.getText();
        servicio[4] = jTextField_infante.getText();
        servicio[5] = jTextField_TEaloj.getText();
        servicio[6] = jTextField_confirmacion.getText().toUpperCase();
        servicio[7] = jTextField_TEtrf.getText();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fecha_ida = jDateChooser_fechaIda.getDate();
        if (fecha_ida != null) {
            servicio[8] = formato.format(fecha_ida);
        } else {
            servicio[8] = "";
        }
        Date fecha_regreso = jDateChooser_fechaRegreso.getDate();
        if (fecha_regreso != null) {
            servicio[9] = formato.format(fecha_regreso);
        } else {
            servicio[9] = "";
        }
        servicio[10] = jComboBox_proveedorTRF.getSelectedItem().toString();
        servicio[11] = jComboBox_trf.getSelectedItem().toString();
        servicio[12] = jComboBox_destino.getSelectedItem().toString();
        servicio[13] = jTextField_aloj_efectivo.getText();
        servicio[14] = jTextField_aloj_credito.getText();
        servicio[15] = jTextField_trf_efectivo.getText();
        servicio[16] = jTextField_trf_credito.getText();
        servicio[17] = jTextArea1_tarjetas_credito.getText().toUpperCase();
        servicio[18] = jTextArea1_observacionesServicio.getText();
        servicio[19] = Util.getFecha_actual();
        servicio[20] = Login.user;
        servicio[21] = jTextField_nombreCliente.getText();
        servicio[22] = jTextField_apellidoCliente.getText();
        servicio[23] = jTextField_telefonoCliente.getText();
        servicio[24] = jTextField_celularCliente.getText();
        servicio[25] = jTextField_EmailCliente.getText();
        servicio[26] = jTextField_nacionalidadCliente.getText();
        servicio[27] = jTextArea1_observacionesCliente.getText();
    }

    private boolean Validar_campos() {
        if (!servicio[13].equals("")) {
            if (!Util.EsDouble(servicio[13])) {
                JOptionPane.showMessageDialog(null, "Campo 'alojamiento efectivo' admite solamente números.");
                return false;
            }
        } else {
            servicio[13] = "0";
        }
        if (!servicio[14].equals("")) {
            if (!Util.EsDouble(servicio[14])) {
                JOptionPane.showMessageDialog(null, "Campo 'alojamiento crédito' admite solamente números.");
                return false;
            }
        } else {
            servicio[14] = "0";
        }
        if (!servicio[15].equals("")) {
            if (!Util.EsDouble(servicio[15])) {
                JOptionPane.showMessageDialog(null, "Campo 'traslado efectivo' admite solamente números.");
                return false;
            }
        } else {
            servicio[15] = "0";
        }
        if (!servicio[16].equals("")) {
            if (!Util.EsDouble(servicio[16])) {
                JOptionPane.showMessageDialog(null, "Campo 'traslado crédito' admite solamente números.");
                return false;
            }
        } else {
            servicio[16] = "0";
        }

        //validando campos info servicio (descripcion, desde, hasta, nombre cliente)
        if (servicio[0].equals("") || servicio[8].equals("") || servicio[9].equals("") || servicio[21].equals("")) {
            JOptionPane.showMessageDialog(null, "Asegúrese de llenar correctamente los campos 'Descripcion',\n"
                    + "'Desde', 'Hasta' y 'Nombre del Cliente'.");
            return false;
        }

        if (!servicio[2].equals("")) {//validando campo adultos
            if (!Util.EsInt(servicio[2])) {
                JOptionPane.showMessageDialog(null, "El campo 'adultos' admite solo números enteros.");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Asegúrese de llenar correctamente el campo 'adultos'.");
            return false;
        }

        if (!servicio[3].equals("")) {//validando campo menores
            if (!Util.EsInt(servicio[3])) {
                JOptionPane.showMessageDialog(null, "El campo 'niños' admite solo números enteros.");
                return false;
            }
        } else {
            servicio[3] = "0";
        }

        if (!servicio[4].equals("")) {//validando campo infante
            if (!Util.EsInt(servicio[4])) {
                JOptionPane.showMessageDialog(null, "El campo 'infante' admite solo números enteros.");
                return false;
            }
        } else {
            servicio[4] = "0";
        }

        //validando campo TE_traslado, trf efectivo y crédito
        if (servicio[11].equals("No")) {//traslado
            servicio[10] = "";//proveedor
            servicio[7] = "";//TE trf
            servicio[15] = "0";//efectivo trf
            servicio[16] = "0";//crédito trf
            jTextField_TEtrf.setText("");
            jTextField_trf_efectivo.setText("");
            jTextField_trf_credito.setText("");
        } else {//TE trf - efectivo trf - credito trf
            if (servicio[7].equals("") || (servicio[15].equals("0") && servicio[16].equals("0")) || (servicio[15].equals("0.0") && servicio[16].equals("0.0"))) {
                JOptionPane.showMessageDialog(null, "Asegúrese de llenar correctamente el campo 'TE traslado'\n"
                        + "y los valores de efectivo/crédito correspondientes.");
                return false;
            }
        }

        //validando campo TE_alojamiento, alojamiento efectivo y crédito
        if (servicio[11].equals("Solo_traslado")) {//traslado
            servicio[5] = "";//TE alojamiento
            servicio[13] = "0";//efectivo hotel
            servicio[14] = "0";//crédito hotel
            jTextField_TEaloj.setText("");
            jTextField_aloj_efectivo.setText("");
            jTextField_aloj_credito.setText("");
        } else {//TE alojamiento - efectivo Hotel - crédito Hotel
            if (servicio[5].equals("") || (servicio[13].equals("0") && servicio[14].equals("0")) || (servicio[13].equals("0.0") && servicio[14].equals("0.0"))) {
                JOptionPane.showMessageDialog(null, "Asegúrese de llenar correctamente el campo 'TE_alojamiento'\n"
                        + "y los valores de efectivo/crédito correspondientes.");
                return false;
            }
        }

        if ((!servicio[14].equals("0") && !servicio[14].equals("0.0")) || (!servicio[16].equals("0") && !servicio[16].equals("0.0"))) {//validando campo tarjetas de crédito 
            if (servicio[17].equals("")) {
                JOptionPane.showMessageDialog(null, "Asegúrese de llenar el campo 'Tarjetas de crédito'.");
                return false;
            }
        }
        
        try {
            Connection cn = Conexion.conectar();
            //comprobando existencia de TE_alojamiento ó TE_traslado en BD
            PreparedStatement pst = cn.prepareStatement(QueryVerificarCoincidenciaTE());

            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "El ticket de alojamiento o de traslado coincide con los datos \n"
                        + "de algún otro servicio reservado con anterioridad. Chequee por favor.");
                return false;
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage().toString());
        }

        return true;
    }

    private boolean Coinciden_clientes() {
        try {//Verificando si datos ingresados de cliente coinciden con clientes registrados ya
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(QueryCoincidenciaCliente());

            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                //existe coincidencia...instancia clase para seleccionar cliente e/ los registrados
                cn.close();
                return true;
            } else {
                cn.close();
                return false;
            }
        } catch (SQLException e) {
            System.err.println("Error chequeando coincidencia con clientes registrados: " + e);
            JOptionPane.showMessageDialog(null, "!!Error chequeando coincidencia con clientes "
                    + "registrados. Contacte al administrador.");
        }
        return false;
    }

    private void Reservar_servicio(String id_cliente) {
        try {//registrando datos en tabla servicio
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("insert into servicios values (?,?,?,?,?,?,?,"
                    + "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

            pst.setInt(1, 0);
            pst.setString(2, id_cliente);
            pst.setString(3, servicio[0]);//decripcion serv
            pst.setString(4, servicio[5]);//TE Hotel
            pst.setString(5, servicio[1]);//Hotel
            pst.setString(6, servicio[12]);//Destino
            pst.setString(7, servicio[8]);//desde
            pst.setString(8, servicio[9]);//hasta
            pst.setString(9, servicio[11]);//traslado
            pst.setString(10, servicio[7]);//TE trf
            pst.setString(11, servicio[19]);//fecha reservado
            pst.setString(12, servicio[20]);//reservado por
            pst.setString(13, servicio[18]);//observaciones serv
            pst.setString(14, servicio[10]);//proveedor
            pst.setString(15, servicio[6]);//confirmacion
            pst.setString(16, servicio[2]);//adultos
            pst.setString(17, "");//historial modificaciones
            pst.setString(18, servicio[21]);//nombre
            pst.setString(19, servicio[3]);//menores
            pst.setString(20, servicio[4]);//infante
            pst.setString(21, servicio[22]);//apellido
            pst.setDouble(22, Double.parseDouble(servicio[13]));//efectivo alojamiento
            pst.setDouble(23, Double.parseDouble(servicio[15]));//efectivo trf
            pst.setDouble(24, Double.parseDouble(servicio[14]));// crédito alojamiento
            pst.setDouble(25, Double.parseDouble(servicio[16]));//crédito trf
            pst.setString(26, servicio[17]);//tarjetas crédito
            pst.setString(27,"NO");

            pst.executeUpdate();
            cn.close();

            JOptionPane.showMessageDialog(null, "Servicio reservado correctamente");
            Limpiar();

        } catch (SQLException e) {
            System.err.println("Error llenando tabla servicios: " + e);
            JOptionPane.showMessageDialog(null, "Error llenando tabla servicios. Por favor contacte al administrador");
        }
    }
    
    private void Filtrar(){
        int campo = jComboBox_campos.getSelectedIndex();
        String abuscar = jTextField_buscar.getText().trim();
        String query = "";

        if (campo == 0) {//buscar "Todos";            
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, Telefono_cell, E_mail, Observaciones "
                    + "from Clientes";
            jTextField_buscar.setText("");
        } else if (campo == 1) {//buscar por "Nombre";            
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, "
                    + "Telefono_cell, E_mail, Observaciones from Clientes where Nombre = '" + abuscar + "'";
        } else if (campo == 2) {//buscar por "Telefono_fijo";            
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, "
                    + "Telefono_cell, E_mail, Observaciones from Clientes where Telefono_fijo = '" + abuscar + "'";
        } else if (campo == 3) {//buscar por "Telefono_cell";            
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, "
                    + "Telefono_cell, E_mail, Observaciones from Clientes where Telefono_cell = '" + abuscar + "'";
        } else if (campo == 4) {//buscar por "E_mail";            
            query = "select Id_cliente, Nombre, Apellido, Nacionalidad, Telefono_fijo, "
                    + "Telefono_cell, E_mail, Observaciones from Clientes where E_mail = '" + abuscar + "'";
        }
        
        Util.VaciarTabla(model);

        try {//filtrando tabla clientes
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(query);

            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                Object[] fila = new Object[8];

                for (int i = 0; i < 8; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al filtrar tabla clientes: " + e);
            JOptionPane.showMessageDialog(null, "!!Error al filtrar...comuníquese con el administrador");
        }
    }
}
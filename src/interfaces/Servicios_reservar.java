/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import clases.Conexion;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author ALEX
 */
public class Servicios_reservar extends javax.swing.JFrame {

    public static String telefono, cell, mail;
    private String reservadoPor, desde, hasta, query, nombre, apellido, te_alojamiento, te_traslado,
            id_cliente_vincular = "";
    public static String[] servicio = new String[25];

    /**
     * Creates new form Servicios_agregar_modificar
     */
    public Servicios_reservar() {
        initComponents();
        setSize(740, 625);
        setResizable(false);
        setTitle("Agregar servicio - " + Login.user);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        reservadoPor = Login.user;
        
        Color colorJDateFondo = new Color(204,204,204);        
        ((JTextField)jDateChooser_fechaIda.getDateEditor().getUiComponent()).setBackground(colorJDateFondo);
        ((JTextField)jDateChooser_fechaRegreso.getDateEditor().getUiComponent()).setBackground(colorJDateFondo);       
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/Icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_adultos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_descripcionServ = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField_hotel = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField_TEaloj = new javax.swing.JTextField();
        jComboBox_destino = new javax.swing.JComboBox<>();
        jComboBox_trf = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_TEtrf = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox_proveedorTRF = new javax.swing.JComboBox<>();
        jButton_ReservarServ = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField_nombreCliente = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField_nacionalidadCliente = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField_telefonoCliente = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField_celularCliente = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextField_EmailCliente = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1_observacionesCliente = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        jDateChooser_fechaIda = new com.toedter.calendar.JDateChooser();
        jDateChooser_fechaRegreso = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1_observacionesServicio = new javax.swing.JTextArea();
        jLabel_footer = new javax.swing.JLabel();
        jTextField_confirmacion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField_menor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField_infante = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jTextField_aloj_efectivo = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jTextField_aloj_credito = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1_tarjetas_credito = new javax.swing.JTextArea();
        jTextField_trf_efectivo = new javax.swing.JTextField();
        jTextField_trf_credito = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextField_apellidoCliente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("INFORMACION GENERAL");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 30, -1, -1));

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Adul");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, -1, -1));

        jTextField_adultos.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_adultos.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_adultos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_adultos, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 105, 30, 30));

        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Descripci√≥n");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jTextField_descripcionServ.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_descripcionServ.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_descripcionServ.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_descripcionServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 105, 150, 30));

        jLabel4.setText("Hotel");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 90, -1, -1));

        jTextField_hotel.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_hotel.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_hotel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_hotel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 105, 150, 30));

        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("TE alojamiento");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 90, -1, -1));

        jTextField_TEaloj.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_TEaloj.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_TEaloj.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_TEaloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(525, 105, 100, 30));

        jComboBox_destino.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_destino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_destino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Otros", "Varadero", "CSM", "CayoCoco", "Cienfuegos", "Trinidad" }));
        jPanel1.add(jComboBox_destino, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, 100, 30));

        jComboBox_trf.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_trf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_trf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Si", "No", "Solo_ida", "Solo_regreso", "Solo_traslado" }));
        jPanel1.add(jComboBox_trf, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 100, 30));

        jLabel6.setText("Destino");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 155, -1, -1));

        jLabel7.setText("Traslado");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 155, -1, -1));

        jLabel8.setText("TE traslado");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 155, -1, -1));

        jTextField_TEtrf.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_TEtrf.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_TEtrf.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_TEtrf, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 100, 30));

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("Desde");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 155, -1, -1));

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("Hasta");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 155, -1, -1));

        jLabel11.setText("Proveedor");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 155, -1, -1));

        jComboBox_proveedorTRF.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_proveedorTRF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Transtur", "Transgvt", "Otro" }));
        jComboBox_proveedorTRF.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jComboBox_proveedorTRF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, 90, 30));

        jButton_ReservarServ.setBackground(new java.awt.Color(153, 153, 153));
        jButton_ReservarServ.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_ReservarServ.setText("Reservar");
        jButton_ReservarServ.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_ReservarServ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ReservarServActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_ReservarServ, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 535, 100, 30));

        jLabel13.setText("-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 700, -1));

        jLabel14.setText("Observaciones");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("CLIENTE RELACIONADO");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 360, -1, -1));

        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("Nombre");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));

        jTextField_nombreCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_nombreCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_nombreCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_nombreCliente.setFocusTraversalPolicyProvider(true);
        jPanel1.add(jTextField_nombreCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 405, 100, 30));

        jLabel18.setText("Apellido");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 390, -1, -1));

        jLabel19.setText("Nacionalidad");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 455, -1, -1));

        jTextField_nacionalidadCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_nacionalidadCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_nacionalidadCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_nacionalidadCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 80, 30));

        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("- campos obligatorios");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));

        jTextField_telefonoCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_telefonoCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_telefonoCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_telefonoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 405, 80, 30));

        jLabel21.setText("Tel√©fono");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, -1, -1));

        jTextField_celularCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_celularCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_celularCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_celularCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 405, 80, 30));

        jLabel22.setText("Celular");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, -1, -1));

        jTextField_EmailCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_EmailCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_EmailCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_EmailCliente.setFocusTraversalPolicyProvider(true);
        jPanel1.add(jTextField_EmailCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 210, 30));

        jLabel23.setText("E-mail");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 455, -1, -1));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1_observacionesCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1_observacionesCliente.setColumns(1);
        jTextArea1_observacionesCliente.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1_observacionesCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextArea1_observacionesCliente.setRows(5);
        jScrollPane2.setViewportView(jTextArea1_observacionesCliente);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 405, 180, 100));

        jLabel24.setText("Observaciones");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, -1, -1));

        jDateChooser_fechaIda.setBackground(new java.awt.Color(153, 153, 153));
        jDateChooser_fechaIda.setDateFormatString("dd/MM/yyyy");
        jPanel1.add(jDateChooser_fechaIda, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 130, 30));

        jDateChooser_fechaRegreso.setBackground(new java.awt.Color(153, 153, 153));
        jDateChooser_fechaRegreso.setForeground(new java.awt.Color(0, 0, 115));
        jDateChooser_fechaRegreso.setDateFormatString("dd/MM/yyyy");
        jPanel1.add(jDateChooser_fechaRegreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, 130, 30));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1_observacionesServicio.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1_observacionesServicio.setColumns(1);
        jTextArea1_observacionesServicio.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1_observacionesServicio.setForeground(new java.awt.Color(0, 0, 115));
        jTextArea1_observacionesServicio.setRows(5);
        jScrollPane3.setViewportView(jTextArea1_observacionesServicio);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 235, 180, 100));

        jLabel_footer.setText("¬© Realizado por atstincer");
        jPanel1.add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 575, 150, 20));

        jTextField_confirmacion.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_confirmacion.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_confirmacion.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_confirmacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 105, 80, 30));

        jLabel16.setText("Confirmaci√≥n");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, -1, -1));

        jTextField_menor.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_menor.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_menor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_menor, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 105, 30, 30));

        jLabel12.setText("Ni√±os");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, -1, -1));

        jTextField_infante.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_infante.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_infante.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_infante, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 105, 30, 30));

        jLabel25.setText("Infante");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, -1, -1));

        jLabel26.setText("Alojamiento");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        jTextField_aloj_efectivo.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_aloj_efectivo.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_aloj_efectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_aloj_efectivo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_aloj_efectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_aloj_efectivoActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField_aloj_efectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 245, 80, 25));

        jLabel27.setText("Efectivo");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, -1, -1));

        jTextField_aloj_credito.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_aloj_credito.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_aloj_credito.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_aloj_credito.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_aloj_credito, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 245, 80, 25));

        jLabel28.setText("Cr√©dito");
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, -1, -1));

        jLabel29.setText("Tarjetas de cr√©dito");
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, -1, -1));

        jScrollPane4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextArea1_tarjetas_credito.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1_tarjetas_credito.setColumns(1);
        jTextArea1_tarjetas_credito.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1_tarjetas_credito.setForeground(new java.awt.Color(0, 0, 115));
        jTextArea1_tarjetas_credito.setRows(5);
        jScrollPane4.setViewportView(jTextArea1_tarjetas_credito);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 245, 150, 60));

        jTextField_trf_efectivo.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_trf_efectivo.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_trf_efectivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_trf_efectivo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_trf_efectivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_trf_efectivoActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField_trf_efectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 80, 25));

        jTextField_trf_credito.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_trf_credito.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_trf_credito.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_trf_credito.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jPanel1.add(jTextField_trf_credito, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 80, 25));

        jLabel30.setText("Traslado");
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 285, -1, -1));

        jTextField_apellidoCliente.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_apellidoCliente.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_apellidoCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_apellidoCliente.setFocusTraversalPolicyProvider(true);
        jPanel1.add(jTextField_apellidoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 405, 100, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ReservarServActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ReservarServActionPerformed
        // TODO add your handling code here:

        int vincular = 0, validarServ = 0;
        String descripcionServ = jTextField_descripcionServ.getText();
        String hotel = jTextField_hotel.getText();
        String adultos = jTextField_adultos.getText();
        String menores = jTextField_menor.getText();
        String infante = jTextField_infante.getText();
        te_alojamiento = jTextField_TEaloj.getText();
        te_traslado = jTextField_TEtrf.getText();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        Date fecha_ida = jDateChooser_fechaIda.getDate();
        if (fecha_ida != null) {
            desde = formato.format(fecha_ida);
        } else {
            desde = "";
        }
        Date fecha_regreso = jDateChooser_fechaRegreso.getDate();
        if (fecha_regreso != null) {
            hasta = formato.format(fecha_regreso);
        } else {
            hasta = "";
        }
        String destino = jComboBox_destino.getSelectedItem().toString();
        String proveedorTRF = jComboBox_proveedorTRF.getSelectedItem().toString();
        String traslado = jComboBox_trf.getSelectedItem().toString();
        Calendar calendar = Calendar.getInstance();
        String diaReservado = Integer.toString(calendar.get(Calendar.DATE));
        String mesReservado = Integer.toString(calendar.get(Calendar.MONTH) + 1);
        String anioReservado = Integer.toString(calendar.get(Calendar.YEAR));
        if(diaReservado.length() == 1){
            diaReservado = "0" + diaReservado;            
        }
        if(mesReservado.length() == 1){
            mesReservado = "0" + mesReservado;            
        }
        String fechaReservado = diaReservado + "/" + mesReservado + "/" + anioReservado;

        String aloj_efectivo = jTextField_aloj_efectivo.getText();
        if (!aloj_efectivo.equals("")) {
            if (!EsDouble(aloj_efectivo)) {
                JOptionPane.showMessageDialog(null, "Campo 'alojamiento efectivo' admite solamente n√∫meros.");
                validarServ = 1;
            }
        } else {
            aloj_efectivo = "0";
        }
        String aloj_credito = jTextField_aloj_credito.getText();
        if (!aloj_credito.equals("")) {
            if (!EsDouble(aloj_credito)) {
                JOptionPane.showMessageDialog(null, "Campo 'alojamiento cr√©dito' admite solamente n√∫meros.");
                validarServ = 1;
            }
        } else {
            aloj_credito = "0";
        }
        String trf_efectivo = jTextField_trf_efectivo.getText();
        if (!trf_efectivo.equals("")) {
            if (!EsDouble(trf_efectivo)) {
                JOptionPane.showMessageDialog(null, "Campo 'traslado efectivo' admite solamente n√∫meros.");
                validarServ = 1;
            }
        } else {
            trf_efectivo = "0";
        }
        String trf_credito = jTextField_trf_credito.getText();
        if (!trf_credito.equals("")) {
            if (!EsDouble(trf_credito)) {
                JOptionPane.showMessageDialog(null, "Campo 'traslado cr√©dito' admite solamente n√∫meros.");
                validarServ = 1;
            }
        } else {
            trf_credito = "0";
        }
        String tarjetas_credito = jTextArea1_tarjetas_credito.getText().toUpperCase();

//        System.out.print("H efectivo: " + aloj_efectivo + ", credito: " + aloj_credito + "\n"
//                + "TRF efectivo: " + trf_efectivo + ", credito: " + trf_credito + "\n");

        String confirmacion = jTextField_confirmacion.getText().toUpperCase();
        String observacionesServ = jTextArea1_observacionesServicio.getText();
        nombre = jTextField_nombreCliente.getText();
        apellido = jTextField_apellidoCliente.getText();
        telefono = jTextField_telefonoCliente.getText();
        cell = jTextField_celularCliente.getText();
        mail = jTextField_EmailCliente.getText();
        String nacionalidad = jTextField_nacionalidadCliente.getText();
        String observacionesCliente = jTextArea1_observacionesCliente.getText();

        //validarServ = 0 los campos validados
        //validarServ = 1 faltan campos por llenar
        //vincular = 1 se ha encontrado coincidencia con registro en tabla clientes
        //vincular = 0 no se encontr√≥ coincidencias
        //validando campos info servicio
        if (descripcionServ.equals("") || desde.equals("") || hasta.equals("") || nombre.equals("")) {
            JOptionPane.showMessageDialog(null, "Aseg√∫rese de llenar correctamente los campos 'Descripcion', 'Adultos', \n"
                    + "'Desde', 'Hasta' y 'Nombre del Cliente'.");
            validarServ = 1;
        }

        if (!adultos.equals("")) {//validando campo adultos
            if (!EsInt(adultos)) {
                JOptionPane.showMessageDialog(null, "El campo 'adultos' admite solo n√∫meros enteros.");
                validarServ = 1;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Aseg√∫rese de llenar correctamente el campo 'adultos'.");
            validarServ = 1;
        }

        if (!menores.equals("")) {//validando campo menores
            if (!EsInt(menores)) {
                JOptionPane.showMessageDialog(null, "El campo 'ni√±os' admite solo n√∫meros enteros.");
                validarServ = 1;
            }
        } else {
            menores = "0";
        }

        if (!infante.equals("")) {//validando campo infante
            if (!EsInt(infante)) {
                JOptionPane.showMessageDialog(null, "El campo 'infante' admite solo n√∫meros enteros.");
                validarServ = 1;
            }
        } else {
            infante = "0";
        }

//        //validando campo TE_traslado, trf efectivo y cr√©dito
//        if (traslado.equals("Si") || traslado.equals("Solo_ida") || traslado.equals("Solo_regreso")
//                || traslado.equals("Solo_traslado")) {
//            if (te_traslado.equals("") || (trf_efectivo.equals("") && trf_credito.equals(""))) {
//                JOptionPane.showMessageDialog(null, "Aseg√∫rese de llenar correctamente el campo 'TE traslado'\n"
//                        + "y los valores de efectivo/cr√©dito correspondientes.");
//                validarServ = 1;
//            }
//        } else {
//            proveedorTRF = "";            
//        }
        //validando campo TE_traslado, trf efectivo y cr√©dito
        if (traslado.equals("No")) {
            proveedorTRF = "";
            te_traslado = "";
            trf_efectivo = "0";
            trf_credito = "0";
            jTextField_TEtrf.setText("");
            jTextField_trf_efectivo.setText("");
            jTextField_trf_credito.setText("");
        } else {
            if (te_traslado.equals("") || (trf_efectivo.equals("0") && trf_credito.equals("0"))) {
                JOptionPane.showMessageDialog(null, "Aseg√∫rese de llenar correctamente el campo 'TE traslado'\n"
                        + "y los valores de efectivo/cr√©dito correspondientes.");
                validarServ = 1;
            }
        }

        //validando campo TE_alojamiento, alojamiento efectivo y cr√©dito
        if (traslado.equals("Solo_traslado")) {
            te_alojamiento = "";
            aloj_efectivo = "0";
            aloj_credito = "0";
            jTextField_TEaloj.setText("");
            jTextField_aloj_efectivo.setText("");
            jTextField_aloj_credito.setText("");
        } else {
            if (te_alojamiento.equals("") || (aloj_efectivo.equals("0") && aloj_credito.equals("0"))) {
                JOptionPane.showMessageDialog(null, "Aseg√∫rese de llenar correctamente el campo 'TE_alojamiento'\n"
                        + "y los valores de efectivo/cr√©dito correspondientes.");
                validarServ = 1;
            }
        }

        if (!aloj_credito.equals("0") || !trf_credito.equals("0")) {//validando campo tarjetas de cr√©dito 
            if (tarjetas_credito.equals("")) {
                JOptionPane.showMessageDialog(null, "Aseg√∫rese de llenar el campo 'Tarjetas de cr√©dito'.");
                validarServ = 1;
            }
//            else {
//                double a_double = (double) tarjetas_credito.length() / 16;
//                int a_int = (int) a_double;
//                System.out.println("double = " + a_double + "\nInt = " + a_int + "\nResult = " + (a_double-a_int) + "\n");
//                System.out.println("TarjetaCredito.length: " + tarjetas_credito.length());
//                System.out.println("TarjetaCredito: " + tarjetas_credito);
//                if ((a_double - a_int) != 0.0) {
//                    JOptionPane.showMessageDialog(null, "Aseg√∫rese de llenar correctamente el campo 'Tarjetas de cr√©dito'.");
//                    validarServ = 1;
//                }
//            }
        }

        if (validarServ == 0) {//campos validados
            try {
                Connection cn = Conexion.conectar();
                //comprobando existencia de TE_alojamiento √≥ TE_traslado en BD
                PreparedStatement pst = cn.prepareStatement(QueryVerificarCoincidenciaTE());

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "El ticket de alojamiento o de traslado coincide con los datos \\n"
                            + "de alg√∫n otro servicio reservado con anterioridad. Chequee por favor.");
                } else {
                    if (!telefono.equals("") || !cell.equals("") || !mail.equals("")) {
                        //quiere decir que ingresaron info de cliente para vincular al servicio
                        try {//Verificando si datos ingresados de cliente coinciden con clientes registrados ya                            
                            pst = cn.prepareStatement(QueryVerificarCoincidenciaCliente());

                            rs = pst.executeQuery();

                            if (rs.next()) {
                                //existe coincidencia...instancia clase para seleccionar cliente e/ los registrados
                                vincular = 1;

                                servicio[0] = "";//campo Id_cliente
                                servicio[1] = descripcionServ;
                                servicio[2] = te_alojamiento;
                                servicio[3] = hotel;
                                servicio[4] = destino;
                                servicio[5] = desde;
                                servicio[6] = hasta;
                                servicio[7] = traslado;
                                servicio[8] = te_traslado;
                                servicio[9] = fechaReservado;
                                servicio[10] = reservadoPor;
                                servicio[11] = observacionesServ;
                                servicio[12] = proveedorTRF;
                                servicio[13] = confirmacion;
                                servicio[14] = adultos;
                                servicio[15] = "";//campo "historial modificaciones"
                                servicio[16] = "";//campo "nombre"
                                servicio[17] = menores;
                                servicio[18] = infante;
                                servicio[19] = "";//campo "apellido"
                                servicio[20] = aloj_efectivo;
                                servicio[21] = trf_efectivo;
                                servicio[22] = aloj_credito;
                                servicio[23] = trf_credito;
                                servicio[24] = tarjetas_credito;

                                Clientes_seleccionar clientes_seleccionar = new Clientes_seleccionar();
                                clientes_seleccionar.setVisible(true);
                            }
                        } catch (SQLException e) {
                            System.err.println("Error chequeando coincidencia con clientes registrados: " + e);
                            JOptionPane.showMessageDialog(null, "!!Error chequeando coincidencia con clientes registrados. "
                                    + "Contacte al administrador.");
                        }

                        if (vincular == 0) {//no existe coincidencia
                            try {//registrando cliente nuevo                               
                                pst = cn.prepareStatement("insert into Clientes values (?,?,?,?,?,?,?,?)");

                                pst.setInt(1, 0);
                                pst.setString(2, nombre);
                                pst.setString(3, apellido);
                                pst.setString(4, nacionalidad);
                                pst.setString(5, telefono);
                                pst.setString(6, cell);
                                pst.setString(7, mail);
                                pst.setString(8, observacionesCliente);

                                pst.executeUpdate();

                            } catch (SQLException e) {
                                System.err.println("Error en conexion al insertar valores en tabla Clientes. " + e);
                                JOptionPane.showMessageDialog(null, "Error en conexion al insertar valores en tabla Clientes. Favor "
                                        + "contacte al administrador.");
                            }

                            try {//recuperando Id de cliente registrado                                
                                pst = cn.prepareStatement(QueryRecuperarId());

                                rs = pst.executeQuery();

                                while (rs.next()) {
                                    id_cliente_vincular = rs.getString(1);
                                }
                            } catch (SQLException e) {
                                System.err.println("Error al conectar para recuperar Id del cliente registrado." + e);
                                JOptionPane.showMessageDialog(null, "Error al conectar con la BD. Favor contacte con el administrador.");
                            }

                            try {//registrando datos en tabla servicio                                
                                pst = cn.prepareStatement("insert into servicios values (?,?,?,?,?,?,?,"
                                        + "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

                                pst.setInt(1, 0);
                                pst.setString(2, id_cliente_vincular);
                                pst.setString(3, descripcionServ);
                                pst.setString(4, te_alojamiento);
                                pst.setString(5, hotel);
                                pst.setString(6, destino);
                                pst.setString(7, desde);
                                pst.setString(8, hasta);
                                pst.setString(9, traslado);
                                pst.setString(10, te_traslado);
                                pst.setString(11, fechaReservado);
                                pst.setString(12, reservadoPor);
                                pst.setString(13, observacionesServ);
                                pst.setString(14, proveedorTRF);
                                pst.setString(15, confirmacion);
                                pst.setString(16, adultos);
                                pst.setString(17, "");//historial modificaciones
                                pst.setString(18, nombre);
                                pst.setString(19, menores);
                                pst.setString(20, infante);
                                pst.setString(21, apellido);
                                pst.setDouble(22, Double.parseDouble(aloj_efectivo));
                                pst.setDouble(23, Double.parseDouble(trf_efectivo));
                                pst.setDouble(24, Double.parseDouble(aloj_credito));
                                pst.setDouble(25, Double.parseDouble(trf_credito));
                                pst.setString(26, tarjetas_credito);

                                pst.executeUpdate();

                                JOptionPane.showMessageDialog(null, "Servicio reservado correctamente");
                                Limpiar();

                            } catch (SQLException e) {
                                System.err.println("Error llenando tabla servicios: " + e);
                                JOptionPane.showMessageDialog(null, "Error llenando tabla servicios. Por favor contacte al administrador");
                            }
                        }

                    } else {
                        try {//registrando datos en tabla servicio                            
                            pst = cn.prepareStatement("insert into servicios values (?,?,?,?,?,?,?,?,?,"
                                    + "?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

                            pst.setInt(1, 0);
                            pst.setString(2, id_cliente_vincular);
                            pst.setString(3, descripcionServ);
                            pst.setString(4, te_alojamiento);
                            pst.setString(5, hotel);
                            pst.setString(6, destino);
                            pst.setString(7, desde);
                            pst.setString(8, hasta);
                            pst.setString(9, traslado);
                            pst.setString(10, te_traslado);
                            pst.setString(11, fechaReservado);
                            pst.setString(12, reservadoPor);
                            pst.setString(13, observacionesServ);
                            pst.setString(14, proveedorTRF);
                            pst.setString(15, confirmacion);
                            pst.setString(16, adultos);
                            pst.setString(17, "");
                            pst.setString(18, nombre);
                            pst.setString(19, menores);
                            pst.setString(20, infante);
                            pst.setString(21, apellido);
                            pst.setDouble(22, Double.parseDouble(aloj_efectivo));
                            pst.setDouble(23, Double.parseDouble(trf_efectivo));
                            pst.setDouble(24, Double.parseDouble(aloj_credito));
                            pst.setDouble(25, Double.parseDouble(trf_credito));
                            pst.setString(26, tarjetas_credito);

                            pst.executeUpdate();

                            JOptionPane.showMessageDialog(null, "Servicio reservado correctamente");
                            Limpiar();

                        } catch (SQLException e) {
                            System.err.println("Error llenando tabla servicios: " + e);
                            JOptionPane.showMessageDialog(null, "Error llenando tabla servicios. Por favor contacte al administrador");
                        }
                    }
                }
                cn.close();
            } catch (SQLException e) {
                System.err.println("Error conectando con BD: " + e);
            }

        }


    }//GEN-LAST:event_jButton_ReservarServActionPerformed

    private void jTextField_aloj_efectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_aloj_efectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_aloj_efectivoActionPerformed

    private void jTextField_trf_efectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_trf_efectivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_trf_efectivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servicios_reservar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servicios_reservar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servicios_reservar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servicios_reservar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servicios_reservar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ReservarServ;
    private javax.swing.JComboBox<String> jComboBox_destino;
    private javax.swing.JComboBox<String> jComboBox_proveedorTRF;
    private javax.swing.JComboBox<String> jComboBox_trf;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaIda;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaRegreso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_footer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1_observacionesCliente;
    private javax.swing.JTextArea jTextArea1_observacionesServicio;
    private javax.swing.JTextArea jTextArea1_tarjetas_credito;
    private javax.swing.JTextField jTextField_EmailCliente;
    private javax.swing.JTextField jTextField_TEaloj;
    private javax.swing.JTextField jTextField_TEtrf;
    private javax.swing.JTextField jTextField_adultos;
    private javax.swing.JTextField jTextField_aloj_credito;
    private javax.swing.JTextField jTextField_aloj_efectivo;
    private javax.swing.JTextField jTextField_apellidoCliente;
    private javax.swing.JTextField jTextField_celularCliente;
    private javax.swing.JTextField jTextField_confirmacion;
    private javax.swing.JTextField jTextField_descripcionServ;
    private javax.swing.JTextField jTextField_hotel;
    private javax.swing.JTextField jTextField_infante;
    private javax.swing.JTextField jTextField_menor;
    private javax.swing.JTextField jTextField_nacionalidadCliente;
    private javax.swing.JTextField jTextField_nombreCliente;
    private javax.swing.JTextField jTextField_telefonoCliente;
    private javax.swing.JTextField jTextField_trf_credito;
    private javax.swing.JTextField jTextField_trf_efectivo;
    // End of variables declaration//GEN-END:variables

    //query para recuperar Id del cliente registrado
    public String QueryRecuperarId() {
        if (!telefono.equals("") && cell.equals("") && mail.equals("")) {//buscar solo por telefono
            query = "select Id_cliente from Clientes where Nombre = '" + nombre + "' and Telefono_fijo = '" + telefono + "'";
        } else if (!telefono.equals("") && !cell.equals("") && mail.equals("")) {//buscar por telefono y cell
            query = "select Id_cliente from Clientes where Nombre = '" + nombre + "' and Telefono_fijo = '" + telefono + "' "
                    + "and  Telefono_cell = '" + cell + "'";
        } else if (!telefono.equals("") && cell.equals("") && !mail.equals("")) {//buscar por telefono y mail
            query = "select Id_cliente from Clientes where Nombre = '" + nombre + "' and Telefono_fijo = '" + telefono + "' "
                    + "and  E_mail = '" + mail + "'";
        } else if (!telefono.equals("") && !cell.equals("") && !mail.equals("")) {//buscar por los tres
            query = "select Id_cliente from Clientes where Nombre = '" + nombre + "' and Telefono_fijo = '" + telefono + "' "
                    + "and  Telefono_cell = '" + cell + "' and E_mail = '" + mail + "'";
        } else if (telefono.equals("") && !cell.equals("") && mail.equals("")) {//buscar por cell
            query = "select Id_cliente from Clientes where Nombre = '" + nombre + "' and Telefono_cell = '" + cell + "'";
        } else if (telefono.equals("") && !cell.equals("") && !mail.equals("")) {//buscar por cell y mail
            query = "select Id_cliente from Clientes where Nombre = '" + nombre + "' and Telefono_cell = '" + cell + "' "
                    + "and E_mail = '" + mail + "'";
        } else if (telefono.equals("") && cell.equals("") && !mail.equals("")) {//buscar por mail
            query = "select Id_cliente from Clientes where Nombre = '" + nombre + "' and E_mail = '" + mail + "'";
        }
        return query;
    }

    //query para verificar si info coincide con algun cliente registrado anteriormente
    public String QueryVerificarCoincidenciaCliente() {
        if (!telefono.equals("") && cell.equals("") && mail.equals("")) {//buscar solo por telefono
            query = "select * from Clientes where Telefono_fijo = '" + telefono + "'";
        } else if (!telefono.equals("") && !cell.equals("") && mail.equals("")) {//buscar por telefono y cell
            query = "select * from Clientes where Telefono_fijo = '" + telefono + "' and  Telefono_cell = '" + cell + "'";
        } else if (!telefono.equals("") && cell.equals("") && !mail.equals("")) {//buscar por telefono y mail
            query = "select * from Clientes where Telefono_fijo = '" + telefono + "' and  E_mail = '" + mail + "'";
        } else if (!telefono.equals("") && !cell.equals("") && !mail.equals("")) {//buscar por los telefono, cell y mail
            query = "select * from Clientes where Telefono_fijo = '" + telefono + "' and  Telefono_cell = '" + cell + "' "
                    + "and E_mail = '" + mail + "'";
        } else if (telefono.equals("") && !cell.equals("") && mail.equals("")) {//buscar por cell
            query = "select * from Clientes where Telefono_cell = '" + cell + "'";
        } else if (telefono.equals("") && !cell.equals("") && !mail.equals("")) {//buscar por cell y mail
            query = "select * from Clientes where Telefono_cell = '" + cell + "' and E_mail = '" + mail + "'";
        } else if (telefono.equals("") && cell.equals("") && !mail.equals("")) {//buscar por mail
            query = "select * from Clientes where E_mail = '" + mail + "'";
        }
        return query;
    }

    //query para verificar si info coincide con algun ticket registrado anteriormente
    public String QueryVerificarCoincidenciaTE() {
        if (!te_alojamiento.equals("") && te_traslado.equals("")) {//buscar por te_alojamiento
            query = "select Id_servicio from Servicios where TE_alojamiento = '" + te_alojamiento + "'";
        } else if (!te_alojamiento.equals("") && !te_traslado.equals("")) {//buscar por te_alojamiento y te_traslado
            query = "select Id_servicio from Servicios where TE_alojamiento = '" + te_alojamiento + "' "
                    + "or TE_traslado = '" + te_traslado + "'";
        } else if (te_alojamiento.equals("") && !te_traslado.equals("")) {//buscar por te_traslado
            query = "select Id_servicio from Servicios where TE_traslado = '" + te_traslado + "'";
        }
        return query;
    }

    //metodo para limpiar todos los campos
    public void Limpiar() {
        jTextField_descripcionServ.setText("");
        jTextField_hotel.setText("");
        jTextField_TEaloj.setText("");
        jTextField_TEtrf.setText("");
        jTextArea1_observacionesServicio.setText("");
        jTextField_nombreCliente.setText("");
        jTextField_apellidoCliente.setText("");
        jTextField_telefonoCliente.setText("");
        jTextField_celularCliente.setText("");
        jTextField_EmailCliente.setText("");
        jTextArea1_observacionesCliente.setText("");
        jTextField_nacionalidadCliente.setText("");
        jTextField_adultos.setText("");
        jDateChooser_fechaIda.setCalendar(null);
        jDateChooser_fechaRegreso.setCalendar(null);
        jTextField_confirmacion.setText("");
        jTextField_menor.setText("");
        jTextField_infante.setText("");
        jTextField_aloj_credito.setText("");
        jTextField_aloj_efectivo.setText("");
        jTextField_trf_credito.setText("");
        jTextField_trf_efectivo.setText("");
        jTextArea1_tarjetas_credito.setText("");
    }

//    //para pasar vector servicio
//    public String getServicio(int i){
//        return servicio[i];
//    }
    
    //comprobando si es n√∫mero
    public boolean EsDouble(String str) {
        try {
            double db = Double.parseDouble(str);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

    //comprobando si es entero
    public boolean EsInt(String a) {
        try {
            int b = Integer.parseInt(a);
        } catch (NumberFormatException e) {
            return false;
        }
        return true;
    }

}

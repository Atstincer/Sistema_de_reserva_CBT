/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author ALEX
 */
public class Servicios_tablaFiltro extends javax.swing.JFrame {

    public static int Id_servicioSeleccionado;
    DefaultTableModel mode1 = new DefaultTableModel();

    /**
     * Creates new form Clientes_AdminII
     */
    public Servicios_tablaFiltro() {
        initComponents();
        setSize(1000, 500);
        setResizable(false);
        setTitle("Tabla servicios - " + Login.user);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement("select Id_servicio, Descripcion, TE_alojamiento, Nombre_cliente, "
                    + "Apellido_cliente, Pax, Menores, Infantes, Hotel, Destino, No_conf, Fecha_inicio, Fecha_fin, "
                    + "Traslado, TE_traslado, Observaciones from servicios");

            ResultSet rs = pst.executeQuery();

            jTable_servicios = new JTable(mode1);
            jScrollPane1.setViewportView(jTable_servicios);

            mode1.addColumn(" ");
            mode1.addColumn("Descripción");
            mode1.addColumn("TE alojamiento");
            mode1.addColumn("Nombre");
            mode1.addColumn("Apellido");
            mode1.addColumn("Ad");
            mode1.addColumn("Men");
            mode1.addColumn("Inf");
            mode1.addColumn("Hotel");
            mode1.addColumn("Destino");
            mode1.addColumn("Conf.");
            mode1.addColumn("Desde");
            mode1.addColumn("Hasta");
            mode1.addColumn("Traslado?");
            mode1.addColumn("TE traslado");
            mode1.addColumn("Observaciones");

            FijarAnchoColumnas();

            while (rs.next()) {
                Object[] fila = new Object[16];

                for (int i = 0; i < 16; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                mode1.addRow(fila);
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar tabla. " + e);
            JOptionPane.showMessageDialog(null, "!!Error al mostrar tabla...contacte al administrador");
        }

        Color myColorFondo = new Color(204, 204, 204);
        Color myColorFuente = new Color(0, 0, 115);
        jTable_servicios.setBackground(myColorFondo);
        jTable_servicios.setForeground(myColorFuente);

        jTable_servicios.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_servicios.rowAtPoint(e.getPoint());
//                int columna_point = 1;

                if (fila_point > -1) {
                    Id_servicioSeleccionado = (int) mode1.getValueAt(fila_point, 0);
                    Servicios_update servicio_update = new Servicios_update();
                    servicio_update.setVisible(true);

                }
            }

        });
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/Icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_buscar = new javax.swing.JTextField();
        jComboBox_campos = new javax.swing.JComboBox<>();
        jButton_filtrar = new javax.swing.JButton();
        jLabel_footer = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_servicios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("TABLA SERVICIOS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 43, -1, -1));

        jTextField_buscar.setBackground(new java.awt.Color(204, 204, 204));
        jTextField_buscar.setForeground(new java.awt.Color(0, 0, 115));
        jTextField_buscar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1));
        jTextField_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_buscarActionPerformed(evt);
            }
        });
        jTextField_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_buscarKeyPressed(evt);
            }
        });
        jPanel1.add(jTextField_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 40, 150, 30));

        jComboBox_campos.setBackground(new java.awt.Color(100, 100, 100));
        jComboBox_campos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "TE_alojamiento", "TE_traslado", "Desde", "Hasta", "Fecha_reservado", "No_confirmacion" }));
        jPanel1.add(jComboBox_campos, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 40, 140, 30));

        jButton_filtrar.setBackground(new java.awt.Color(153, 153, 153));
        jButton_filtrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_filtrar.setText("Filtrar");
        jButton_filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_filtrarActionPerformed(evt);
            }
        });
        jPanel1.add(jButton_filtrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 415, 80, 30));

        jLabel_footer.setText("© Realizado por atstincer");
        jPanel1.add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, 150, 20));

        jLabel2.setText("- Click sobre la tabla para seleccionar servicio.");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 397, -1, -1));

        jTable_servicios.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable_servicios.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable_servicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_servicios.setCellSelectionEnabled(true);
        jTable_servicios.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTable_servicios);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, 970, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_buscarActionPerformed

    private void jButton_filtrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_filtrarActionPerformed
        // TODO add your handling code here:
       Filtrar();
    }//GEN-LAST:event_jButton_filtrarActionPerformed

    private void jTextField_buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_buscarKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode()==KeyEvent.VK_ENTER){
            Filtrar();
        }
    }//GEN-LAST:event_jTextField_buscarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servicios_tablaFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servicios_tablaFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servicios_tablaFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servicios_tablaFiltro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servicios_tablaFiltro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_filtrar;
    private javax.swing.JComboBox<String> jComboBox_campos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_footer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_servicios;
    private javax.swing.JTextField jTextField_buscar;
    // End of variables declaration//GEN-END:variables

    //método para vaciar tabla
    public void VaciarTabla() {
        for (int i = mode1.getRowCount() - 1; i >= 0; i--) {
            mode1.removeRow(i);
        }
    }

    //método para fijar ancho columna Id
    public void FijarAnchoColumnas() {
//        TableColumn columnaId = jTable_servicios.getColumn(" ");
//        columnaId.setMinWidth(25);
//        columnaId.setMaxWidth(25);
        TableColumn columnaAd = jTable_servicios.getColumn("Ad");
        columnaAd.setMinWidth(30);
        columnaAd.setMaxWidth(30);
        TableColumn columnaMen = jTable_servicios.getColumn("Men");
        columnaMen.setMinWidth(35);
        columnaMen.setMaxWidth(35);
        TableColumn columnaInf = jTable_servicios.getColumn("Inf");
        columnaInf.setMinWidth(30);
        columnaInf.setMaxWidth(30);
    }

    public boolean ValidDate(String str) {
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        try {
            df.parse(str);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    public void Filtrar(){
         int campo = jComboBox_campos.getSelectedIndex();
        String abuscar = jTextField_buscar.getText().trim();
        String query = "";
        int validar = 0;

        if (campo == 0) {//filtrar por todos            
            query = "select Id_servicio, Descripcion, TE_alojamiento, Nombre_cliente, Apellido_cliente, Pax, Menores, "
                    + "Infantes, Hotel, Destino, No_conf, Fecha_inicio, Fecha_fin, Traslado, TE_traslado, Observaciones "
                    + "from servicios";
            jTextField_buscar.setText("");
            abuscar = "";
        } else {
            if (!abuscar.equals("")) {
                if (campo == 1) {//filtrar por TE_alojamiento
                    query = "select Id_servicio, Descripcion, TE_alojamiento, Nombre_cliente, Apellido_cliente, Pax, Menores, "
                            + "Infantes, Hotel, Destino, No_conf, Fecha_inicio, Fecha_fin, Traslado, TE_traslado, Observaciones "
                            + "from servicios where TE_alojamiento = '" + abuscar + "'";
                } else if (campo == 2) {//filtrar por TE_traslado
                    query = "select Id_servicio, Descripcion, TE_alojamiento, Nombre_cliente, Apellido_cliente, Pax, Menores, "
                            + "Infantes, Hotel, Destino, No_conf, Fecha_inicio, Fecha_fin, Traslado, TE_traslado, Observaciones "
                            + "from servicios where TE_traslado = '" + abuscar + "'";
                } else if (campo == 3) {//filtrar por fecha_inicio
                    if(ValidDate(abuscar)){
                        query = "select Id_servicio, Descripcion, TE_alojamiento, Nombre_cliente, Apellido_cliente, Pax, Menores, "
                            + "Infantes, Hotel, Destino, No_conf, Fecha_inicio, Fecha_fin, Traslado, TE_traslado, Observaciones "
                            + "from servicios where Fecha_inicio = '" + abuscar + "'";
                    } else {
                        validar = 1;
                        JOptionPane.showMessageDialog(null, "Debes escribir la fecha a buscar con el formato "
                                + "dia/mes/año" + "\n\n" + "Ejemplo: 05/01/2021");
                    }                    
                } else if (campo == 4) {//filtrar por fecha_fin
                    if(ValidDate(abuscar)){
                        query = "select Id_servicio, Descripcion, TE_alojamiento, Nombre_cliente, Apellido_cliente, Pax, Menores, "
                            + "Infantes, Hotel, Destino, No_conf, Fecha_inicio, Fecha_fin, Traslado, TE_traslado, Observaciones "
                            + "from servicios where Fecha_fin = '" + abuscar + "'";
                    } else {
                        validar = 1;
                        JOptionPane.showMessageDialog(null, "Debes escribir la fecha a buscar con el formato "
                                + "dia/mes/año" + "\n\n" + "Ejemplo: 05/01/2021");
                    }                        
                } else if (campo == 5) {//filtrar por fecha_reservado
                    if(ValidDate(abuscar)){
                        query = "select Id_servicio, Descripcion, TE_alojamiento, Nombre_cliente, Apellido_cliente, Pax, Menores, "
                            + "Infantes, Hotel, Destino, No_conf, Fecha_inicio, Fecha_fin, Traslado, TE_traslado, Observaciones "
                            + "from servicios where Reservado_fecha = '" + abuscar + "'";
                    } else {
                        validar = 1;
                        JOptionPane.showMessageDialog(null, "Debes escribir la fecha a buscar con el formato "
                                + "dia/mes/año" + "\n\n" + "Ejemplo: 05/01/2021");
                    }                       
                } else if (campo == 6) {//filtrar por No_confirmacion
                    query = "select Id_servicio, Descripcion, TE_alojamiento, Nombre_cliente, Apellido_cliente, Pax, Menores, "
                            + "Infantes, Hotel, Destino, No_conf, Fecha_inicio, Fecha_fin, Traslado, TE_traslado, Observaciones "
                            + "from servicios where No_conf = '" + abuscar + "'";
                }
            } else {
                JOptionPane.showMessageDialog(null, "Debes ingresar el dato que deseas buscar");
                validar = 1;
            }
        }

        if (validar == 0) {
            VaciarTabla();

            try {
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst = cn2.prepareStatement(query);

                ResultSet rs = pst.executeQuery();

                while (rs.next()) {
                    Object[] fila = new Object[16];

                    for (int i = 0; i < 16; i++) {
                        fila[i] = rs.getObject(i + 1);
                    }
                    mode1.addRow(fila);
                }
                cn2.close();

            } catch (SQLException e) {
                System.err.println("Error al filtrar: " + e);
                JOptionPane.showMessageDialog(null, "!!Error al filtrar...comuníquese con el administrador");
            }
        }
    }

}
